extends layout

block content
  .container
    .btn-group(role='toolbar' aria-label='...')
      .btn-group(role='group')
        button.btn.btn-default.dropdown-toggle#langSelect(type='button' data-toggle='dropdown' aria-haspopup='true'
          aria-expanded='false' style="width: 100px;") Language 
          span.caret
        ul.dropdown-menu#lang(aria-labelledby='langSelect')
          li 
            a(value='python3') Python 3
          li
            a(value='gcc') C
          li 
            a(value='g++') C++

      .btn-group(role='group')
        button.btn.btn-default.dropdown-toggle#editorSelect(type='button' data-toggle='dropdown' aria-haspopup='true'
          aria-expanded='false') Editor Mode 
          span.caret
        ul.dropdown-menu#editor(aria-labelledby='editorSelect')
          li 
            a(value='vim') vim
          li
            a(value='emacs') emacs
          li 
            a(value='sublime') sublime 
          li
            a(value='default') default

      .btn-group(role='group')
        button.btn.btn-default.dropdown-toggle#themeSelect(type='button' data-toggle='dropdown' aria-haspopup='true'
          aria-expanded='false') Theme 
          span.caret
        ul.dropdown-menu#theme(aria-labelledby='themeSelect')
          li 
            a(value='solarized dark') solarized dark 
          li
            a(value='solarized light') solarized light
          li 
            a(value='blackboard') blackboard 
          li 
            a(value='dracula') dracula 
          li 
            a(value='monokai') monokai 
          li 
            a(value='zenburn') zenburn 
          li 
            a(value='tomorrow-night-bright') tomorrow-night-bright 
          li 
            a(value='tomorrow-night-eighties') tomorrow-night-eighties 
          li
            a(value='default') default

  .container(style="margin-top: 16px;")
    textarea#code(rows='30' name='code' style="border-radius: 4px;")

  .container(style="margin-top: 16px;")
    button.btn.btn-default#compile Fire in the hole!

  .container
    .row
      .col-md-6
        h4 Input
        form
          textarea.form-control#input(rows='5' name='input')
      .col-md-6
        h4 Output
        form
          textarea.form-control#output(rows='5' name='output')

  script.
    $(function() {
      var editor = CodeMirror.fromTextArea(document.getElementById("code"));
      var compiler = "python3"
      editor.setOption("lineNumbers", true);
      editor.setOption("mode", "python");

      editor.on("inputRead", function(cm, event) {
        var ch = cm.doc.getLine(event.to.line).substr(event.to.ch, 1);

        // for now only autocomplete for alphanumeric chars
        var alnum= /[A-Za-z0-9]/g;
        if (alnum.test(ch)) {
          editor.showHint({completeSingle: false});
        }
      });

      var sendRunRequest = function() {
        $.ajax({
          type: "POST",
          url: "/ide",
          data: "code=" + encodeURIComponent(editor.getValue()) + "&input=" 
                  + encodeURIComponent($('#input').val()) + "&compiler="
                  + encodeURIComponent(compiler), 
          success: function(data) {
            console.log(data);
            $('#output').val(data);
          }
        });
      };

      editor.setOption("extraKeys", {"Ctrl-Enter": sendRunRequest, 
                                      "Ctrl-Space": "autocomplete"});

      $('button#compile').click(sendRunRequest);

      $('.dropdown-menu#editor li a').click(function() {
        selection = $(this).text();
        $('#editorSelect').text(selection + ' ');
        var value = $(this).attr('value');
        editor.setOption("keyMap", value);
        window.localStorage.setItem("fa_preferred_editor", value);
       $("<span class='caret'></span>").appendTo("#editorSelect");
      });

      $('.dropdown-menu#lang li a').click(function() {
        selection = $(this).text();
        $('#langSelect').text(selection + ' ');
        var value = $(this).attr('value');
        if (value === 'python3') {
          editor.setOption("mode", "python");
        } else if (value === 'gcc') {
          editor.setOption("mode", "text/x-csrc");
        } else if (value === 'g++') {
          editor.setOption("mode", "text/x-c++src");
        }
        compiler = value;
        window.localStorage.setItem("fa_preferred_language", value);
        $("<span class='caret'></span>").appendTo("#langSelect");
      });

      $('.dropdown-menu#theme li a').click(function() {
        selection = $(this).text();
        $('#themeSelect').text(selection + ' ');
        var value = $(this).attr('value');
        editor.setOption("theme", value);
        window.localStorage.setItem("fa_preferred_theme", value);
        $("<span class='caret'></span>").appendTo("#themeSelect");
      });

    });
