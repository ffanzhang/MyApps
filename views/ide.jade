doctype html
html
  head
    title= title
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
    link(rel="stylesheet"
        href="//stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
        crossorigin="anonymous")

    link(rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css")
    link(rel='stylesheet', href='lib/codemirror.css')
    link(rel='stylesheet', href='addon/hint/show-hint.css')
    link(rel='stylesheet', href='addon/dialog/dialog.css')
    link(rel='stylesheet', href='addon/display/fullscreen.css')
    link(rel='stylesheet', href='theme/solarized.css')
    link(rel='stylesheet', href='theme/monokai.css')
    link(rel='stylesheet', href='theme/dracula.css')
    link(rel='stylesheet', href='theme/zenburn.css')
    link(rel='stylesheet', href='theme/blackboard.css')
    link(rel='stylesheet', href='theme/tomorrow-night-bright.css')
    link(rel='stylesheet', href='theme/tomorrow-night-eighties.css')

    script(
        src="//code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous")

    script(src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
        integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
          crossorigin="anonymous")

    script(
        src="//cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
        crossorigin="anonymous")
    script(
        src="//stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
        crossorigin="anonymous")
    script(src='lib/codemirror.js')
    script(src='keymap/vim.js')
    script(src='keymap/sublime.js')
    script(src='keymap/emacs.js')
    script(src='addon/dialog/dialog.js')
    script(src='addon/search/searchcursor.js')
    script(src='addon/edit/matchbrackets.js')
    script(src='addon/runmode/colorize.js')
    script(src='addon/hint/show-hint.js')
    script(src='addon/display/fullscreen.js')
    script(src='mode/python/python.js')
    script(src='mode/clike/clike.js')
    style.
      body {
        display: block;
        position: absolute;
        height: 100%;
        width: 100%;
      }
      
      .CodeMirror {
        height: auto;
        width: 100%;
      }

      .CodeMirror-scroll {
        overflow-y: scroll;
        overflow-x: hidden;
      }

      #codemirror-container {
        position: fixed;
        top: 0;
        display: block;
        height: 75%;
        width: 100% !important;
      }

      #io {
        position: fixed;
        display: block;
        background-color: #f8f9fa;
        height: 25%;
        width: 100%;
        padding-bottom: 56px;
        z-index: 505050;
        bottom: 0;
      }

      #input-header,
      #output-header {
        display: inline-block;
        position: relative; 
        padding: 12px;
        margin: 0;
        height: 20px; 
        width: 50%; 
        box-sizing: border-box;
      }

      #input-header > p,
      #output-header > p {
        margin: 0;
      }

      #input-container,
      #output-container {
          display: inline-block; 
          position: relative; 
          width: 50%; 
          height: 100%;
          top: 0;
          padding: 12px;
          box-sizing: border-box;
      }

      #input, #output {
          width: 100%; 
          height: 100%; 
          position: relative; 
          top: 0;
      }


      ul li {
        cursor: pointer;
      }

      .preloader {
        border: 3px solid #ffffff;
        height: 16px;
        width: 16px;
        border-top: 3px solid rgba(0, 0, 0, 0);
        border-radius: 50%;
        animation: spin 2s linear infinite;
      }

      table {
        width: 100%;
      }

      td {
        max-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      #tables {
        margin-top: 16px;
      }

      #settings {
        background-color: #f8f9fa;
        position: fixed;
        right: 12px;
        bottom: 68px;
        height: 120px;
        padding: 16px;
        z-index: 999999;
        border-radius: 8px;
      }

      .col .btn-group {
        margin: auto;
      }

      .ui-resizable-handle.ui-resizable-s {
        cursor: ns-resize;
        height: 10px;
        background-color: #dddddd;
        z-index: 9999999;
        -webkit-box-shadow: 1px -1px 4px 0px rgba(99,99,99,1);
        -moz-box-shadow: 1px -1px 4px 0px rgba(99,99,99,1);
        box-shadow: 1px -1px 4px 0px rgba(99,99,99,1);
      }

      .collaspse {
        transition: none !important;
      }

      .collapsing {
        -webkit-transition: none;
        transition: none;
        display: none;
      }

      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
      *, *:before, *:after {
        box-sizing: border-box;
      }
  body
      #codemirror-container
        textarea#code(name='code')

      .collapse#settings
        .row
          .col
          .col
            .btn-group.dropup(role='toolbar')
              .btn-group(role='group')
                button.btn.btn-outline-secondary.dropdown-toggle#editorSelect(type='button' data-toggle='dropdown' aria-haspopup='true'
                  aria-expanded='false' style="width: 100px;") Editor Mode 
                  span.caret
                ul.dropdown-menu#editor-type(aria-labelledby='editorSelect')
                  li.dropdown-item
                    a(value='vim') vim
                  li.dropdown-item
                    a(value='emacs') emacs
                  li.dropdown-item
                    a(value='sublime') sublime 
                  li.dropdown-item
                    a(value='default') default

              .btn-group(role='group')
                button.btn.btn-outline-secondary.dropdown-toggle#themeSelect(type='button' data-toggle='dropdown' aria-haspopup='true'
                  aria-expanded='false' style="width: 200px;") Theme 
                  span.caret
                ul.dropdown-menu#theme(aria-labelledby='themeSelect')
                  li.dropdown-item
                    a(value='solarized dark') solarized dark 
                  li.dropdown-item
                    a(value='solarized light') solarized light
                  li.dropdown-item
                    a(value='blackboard') blackboard 
                  li.dropdown-item
                    a(value='dracula') dracula 
                  li.dropdown-item
                    a(value='monokai') monokai 
                  li.dropdown-item
                    a(value='zenburn') zenburn 
                  li.dropdown-item
                    a(value='tomorrow-night-bright') tomorrow-night-bright 
                  li.dropdown-item
                    a(value='tomorrow-night-eighties') tomorrow-night-eighties 
                  li.dropdown-item
                    a(value='default') default
          .col

      #io
        #input-container
          textarea.form-control#input(name='input', placeholder='input')
        #output-container
          textarea.form-control#output(name='output', placeholder='output')

    nav.navbar.navbar-light.bg-light.fixed-bottom(style="z-index:99999999999;")
      .container-fluid
        .btn-group.dropup(role='toolbar')
          button.btn.btn-primary#compile(disabled) Run 
          .btn-group(role='group', style="width: 100px;")
            button.btn.btn-outline-secondary.dropdown-toggle#langSelect(type='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false') Language 
            ul.dropdown-menu#lang(aria-labelledby='langSelect')
              li.dropdown-item
                a(value='python') Python 2
              li.dropdown-item
                a(value='python3') Python 3
              li.dropdown-item
                a(value='gcc') C
              li.dropdown-item
                a(value='g++') C++
              li.dropdown-item
                a(value='java') Java 

        button.btn.btn-outline-secondary#settings-btn(data-toggle="collapse" data-target="#settings")
            !{settings_icon}

    script.
      $(function() {
        let editor = CodeMirror.fromTextArea(document.getElementById("code"), {
              lineNumbers: true,
              mode: "python",
              viewportMargin: Infinity,
              extraKeys: {
                  "F11": function(cm) {
                    cm.setOption("fullScreen", !cm.getOption("fullScreen"));
                  },
                  "Esc": function(cm) {
                    if (cm.getOption("fullScreen")) cm.setOption("fullScreen", false);
                  }
              }
        });

        let source = window.localStorage.getItem("source");
        if (source) {
            editor.setValue(source);
        }

        let saveCurrent = function() {
          window.localStorage.setItem("source", editor.getValue());
        }

        window.setInterval(saveCurrent, 10000);
        editor.on("inputRead", function(cm, event) {
          let ch = cm.doc.getLine(event.to.line).substr(event.to.ch, 1);

          // for now only autocomplete for alphanumeric chars
          let alnum= /[A-Za-z0-9]/g;
          if (alnum.test(ch)) {
            editor.showHint({completeSingle: false});
          }
        });

        let sendRunRequest = function() {
          if (!compiler) return;
          $.ajax({
            type: "POST",
            url: "/ide",
            data: "code=" + encodeURIComponent(editor.getValue()) + "&input=" 
                    + encodeURIComponent($('#input').val()) + "&compiler="
                    + encodeURIComponent(compiler), 
          }).done(function(data) {
              $('#output').val(data);
          });
        };

        editor.setOption("extraKeys", {
            "Ctrl-Enter": sendRunRequest, 
            "Ctrl-Space": "autocomplete",
            "F11": function(cm) {
              cm.setOption("fullscreen", !cm.getOption("fullscreen"));
            }
        });

        $('button#compile').click(sendRunRequest);

        $('.dropdown-menu#editor-type li').click(function() {
          selection = $(this).text();
          $('#editorSelect').text(selection + ' ');
          let value = $(this).children().first().attr('value');
          editor.setOption("keyMap", value);
          window.localStorage.setItem("fa_preferred_editor", value);
         $("<span class='caret'></span>").appendTo("#editorSelect");
        });

        $('.dropdown-menu#lang li').click(function() {
          selection = $(this).text();
          $('#langSelect').text(selection + ' ');
          let value = $(this).children().first().attr('value');
          if (value === 'python3' || value === 'python') {
            editor.setOption("mode", "python");
          } else if (value === 'gcc') {
            editor.setOption("mode", "text/x-csrc");
          } else if (value === 'g++') {
            editor.setOption("mode", "text/x-c++src");
          }
          compiler = value;
          if (compiler) {
            $("#compile").prop("disabled", false);
          }
          window.localStorage.setItem("fa_preferred_language", value);
          $("<span class='caret'></span>").appendTo("#langSelect");
        });

        $('.dropdown-menu#theme li').click(function() {
          selection = $(this).text();
          $('#themeSelect').text(selection + ' ');
          let value = $(this).children().first().attr('value');
          editor.setOption("theme", value);
          window.localStorage.setItem("fa_preferred_theme", value);
          $("<span class='caret'></span>").appendTo("#themeSelect");
        });

        let pLanguage = window.localStorage.getItem("fa_preferred_language");
        let pEditor = window.localStorage.getItem("fa_preferred_editor");
        let pTheme = window.localStorage.getItem("fa_preferred_theme");
        if (pLanguage) {
          let lMap = {'python': 'Python 2', 'python3': 'Python 3', 'g++': 'C++', 'gcc': 'C'};
          compiler = pLanguage;
          if (compiler) {
            $("#compile").prop("disabled", false);
          }
          if (pLanguage === 'python3' || pLanguage === 'python') {
            editor.setOption("mode", "python");
          } else if (pLanguage === 'gcc') {
            editor.setOption("mode", "text/x-csrc");
          } else if (pLanguage === 'g++') {
            editor.setOption("mode", "text/x-c++src");
          }
          $('#langSelect').text(lMap[pLanguage] + ' ');
          $("<span class='caret'></span>").appendTo("#langSelect");
        }
        if (pEditor) {
          editor.setOption("keyMap", pEditor);
          $('#editorSelect').text(pEditor + ' ');
          $("<span class='caret'></span>").appendTo("#editorSelect");
        }
        if (pTheme) {
          editor.setOption("theme", pTheme);
          $('#themeSelect').text(pTheme + ' ');
          $("<span class='caret'></span>").appendTo("#themeSelect");
        }

        editor.setSize($("#codemirror-container").width(), $("#codemirror-container").height());
        let ratio = 1;
        $('#codemirror-container').resizable({
          handles: "s",
          maxHeight: $(window).height() - 64,
          resize: function(event, ui) {
            editor.setSize($(window).width(), $(this).height());
            $('#io').height($(window).height() - $(this).height() - 56);
            ratio = $('#codemirror-container').height() / ($('#codemirror-container').height() + $("#io").height());
          }
        });

        window.onbeforeunload = function (e) {
          saveCurrent();
        }
      });
